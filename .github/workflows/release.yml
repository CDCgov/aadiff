name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  RELEASE_BIN: aadiff

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04  # For better compatibility with older Linux systems like RHEL8
            target: x86_64-unknown-linux-gnu
            artifact_name: irma-core-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: irma-core-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: irma-core-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: irma-core-windows-x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install latest nightly Rust
        run: |
          rustup update nightly
          rustup default nightly
          rustup target add ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package Binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.artifact_name }}-${{ env.VERSION }}.zip ${{ env.RELEASE_BIN }}.exe
          else
            tar -czf ../../../${{ matrix.artifact_name }}-${{ env.VERSION }}.tar.gz ${{ env.RELEASE_BIN }}
          fi

      - name: Upload Release Binary
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact_name }}-${{ env.VERSION }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
